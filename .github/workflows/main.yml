# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the action will run. 
on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  GKE_PROJECT: "fluid-blade-329814"
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-c
  GKE_CLUSTER: cluster-1


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Pack and push to docker repository
      - name: Build and Push Docker Image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          tags: v1
          image: meffromkpi/pipeline_test
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

  


  deploy:

    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_email: ${{ secrets.GKE_EMAIL }}
          service_account_key: ${{ secrets.GKE_KEY }}
          export_default_credentials: true

      
      - name: Use gcloud CLI
        run: gcloud info

      #Deploy to gcloud
      - name: Deploy
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER \
            --zone $GKE_ZONE \
            --project $GKE_PROJECT
          kubectl apply -f app-deployment.yml
          sleep 20
          kubectl get pods 
      


